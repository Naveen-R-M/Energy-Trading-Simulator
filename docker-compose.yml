services:
  # Backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: energy-trading-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - GRIDSTATUS_API_KEYS=${GRIDSTATUS_API_KEYS}
    env_file:
      - ./backend/.env
    restart: always
    networks:
      - energy-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: energy-trading-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - BACKEND_URL=http://backend:8000
    restart: always
    networks:
      - energy-trading-network

  # Optional: Nginx reverse proxy (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: energy-trading-proxy
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - energy-trading-network

# Define custom network for service communication
networks:
  energy-trading-network:
    driver: bridge

# Optional: volumes for persistent data
volumes:
  backend_data:
    driver: local
